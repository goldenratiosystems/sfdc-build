<?xml version="1.0"?>

<project name="buildSystem" default="deploy-branch" basedir="." xmlns:sf="antlib:com.salesforce">

	<taskdef uri="antlib:com.salesforce"
			 resource="com/salesforce/antlib.xml"
			 classpath="${basedir}/lib/ant-salesforce.jar"/>

    <taskdef uri="antlib:com.rimerosolutions.ant.git"
         resource="com/rimerosolutions/ant/git/jgit-ant-lib.xml">
        <classpath>
            <pathelement location="${basedir}/lib/org.eclipse.jgit.ant-3.0.0.201306101825-r.jar"/>
            <pathelement location="${basedir}/lib/org.eclipse.jgit-3.0.0.201306101825-r.jar"/>
            <pathelement location="${basedir}/lib/jsch-0.1.50.jar"/>
            <pathelement location="${basedir}/lib/ant-git-tasks-1.3.2.jar"/>
        </classpath>
    </taskdef>

	<property file="build.properties"/>
	<property environment="env"/>

	<import file="${basedir}/lib/deploy.xml"/>
    <import file="${basedir}/lib/undeploy.xml"/>
    <import file="${basedir}/lib/git-setup.xml"/>
    <import file="${basedir}/lib/exec_anon.xml"/>

	<target name="deploy-branch">
	   <antcall target="git-fetch-branch"/>
	   <antcall target="deploy"/>
	</target>

    <target name="save-to-branch">
        <antcall target="git-checkout-branch"/>
        <antcall target="retrieve-metadata"/>
        <antcall target="git-commit-to-branch"/>
    </target>

    <target name="clean-org">
        <antcall target="undeploy"/>
    </target>

    <target name="destroy">
        <destroy
            username="${sf.username}"
            password="${sf.password}"
            serverurl="${sf.server}"
        />
    </target>

    <target name="customdelete">
        <sf:deploy
                serverurl="${sf.server}" username="${sf.username}" password="${sf.password}"
                deployRoot="tmp11"
                ignoreWarnings="true"
                singlePackage="true"
                purgeOnDelete="true"
            />
    </target>


    <macrodef name="retrieveMetaItem">
        <attribute name="metadataType"/>
        <sequential>
            <echo>Preparing destructiveChangesPost.xml - @{metadataType}</echo>
            <local name="listMetadataResult.tmp" />
            <tempfile property="listMetadataResult.tmp" prefix="@{metadataType}" suffix=".tmp" createfile="true" deleteonexit="true" />
            <sf:listMetadata serverurl="${sf.server}" username="${sf.username}" password="${sf.password}" metadataType="@{metadataType}" resultFilePath="${listMetadataResult.tmp}"/>
            <echo>Preparing destructiveChangesPost.xml - @{listMetadataResult.tmp}</echo>
            <concat destFile="@{tempDir}/temppppppppp.xml" append="true">
                <fileset file="${listMetadataResult.tmp}" />
            </concat>
        </sequential>
    </macrodef>

    <macrodef name="bulkRetrieveForDestroy2">
                <attribute name="metadataType" />
                <attribute name="directoryName" />

                <sequential>
                    <echo>Preparing package.xml - @{metadataType}</echo>
                    <mkdir dir="@{tempDir}/@{directoryName}" />
                    <sf:bulkRetrieve serverurl="${sf.server}" username="${sf.username}" password="${sf.password}" retrieveTarget="@{tempDir}" metadataType="@{metadataType}" batchSize="10000" containingFolder="unfiled$public"/>

                </sequential>
            </macrodef>


    <target name="retrieve-meta">
        <retrieveMetaItem metadataType="SearchLayouts"/>
        <!--<bulkRetrieveForDestroy2
                metadataType="EmailTemplate"
                directoryName="EmailTemplates"
            />-->
    </target>

    <target name="qdpl">
        <sf:deploy
                username="${sf.username}"
                password="${sf.password}"
                serverurl="${sf.server}"
                deployRoot="temp/destroy"
                ignoreWarnings="true"
                singlePackage="true"
                purgeOnDelete="true"
            />
    </target>

    <macrodef name="destroy">

        <attribute name="username" />
        <attribute name="password" />
        <attribute name="serverurl" default="https://test.salesforce.com" />
        <attribute name="tempDir" default="temp/destroy" description="Directory to write metadata." />
        <attribute name="apiVersion" default="40.0" />

        <sequential>

            <!-- prompt user to confirm
            <input message="THIS TASK IRREVERSIBLY DESTROYS ALL METADATA. ARE YOU SURE?" validargs="@{serverurl}/?un=@{username}" />-->

            <!-- http api helper -->
            <macrodef name="soapcall">
                <text name="request" />
                <attribute name="endpoint" />
                <attribute name="tempfile" default="" />
                <attribute name="soapaction" default="&quot;&quot;" />
                <sequential>
                    <local name="request" />
                    <property name="request" value="@{request}" />
                    <script language="javascript">with (new JavaImporter(java.net, java.io)) {
                        var line, result = '', connection = new URL('@{endpoint}').openConnection();
                        connection.setDoOutput(true);
                        connection.setRequestMethod('POST');
                        connection.setRequestProperty('Content-Type', 'text/xml');
                        connection.setRequestProperty('SOAPAction', '@{soapaction}');
                        var writer = new OutputStreamWriter(connection.getOutputStream());
                        writer.write(project.getProperty('request')); writer.flush(); //request
                        var reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        while ((line = reader.readLine()) != null) result += line + '\n'; reader.close(); //response
                        var echo = project.createTask('echo');
                        if ('@{tempfile}') echo.setFile(new File('@{tempfile}'));
                        echo.setMessage(result);
                        echo.perform();
                    }</script>
                </sequential>
            </macrodef>

            <!-- http soap login -->
            <local name="loginResponse.tmp" />
            <tempfile property="loginResponse.tmp" prefix="loginResponse" suffix=".tmp" createfile="true" deleteonexit="true" />
            <soapcall tempfile="${loginResponse.tmp}" endpoint="@{serverurl}/services/Soap/u/@{apiVersion}" soapaction="login"><![CDATA[
                <Envelope xmlns="http://schemas.xmlsoap.org/soap/envelope/">
                    <Body>
                        <login xmlns="urn:partner.soap.sforce.com">
                            <username>@{username}</username>
                            <password>@{password}</password>
                        </login>
                    </Body>
                </Envelope>
            ]]></soapcall>

            <!-- parse endpoint -->
            <local name="${loginUrl}" />
            <loadfile property="loginUrl" srcFile="${loginResponse.tmp}">
                <filterchain><tokenfilter><filetokenizer/><replaceregex flags="gs" pattern=".*(https://[^/]+).*" replace="\1" /></tokenfilter></filterchain>
            </loadfile>

            <!-- parse session -->
            <local name="${sessionId}" />
            <loadfile property="sessionId" srcFile="${loginResponse.tmp}">
                <filterchain><tokenfilter><filetokenizer/><replaceregex flags="gs" pattern=".*&lt;sessionId&gt;([^&lt;]+)&lt;/sessionId&gt;.*" replace="\1" /></tokenfilter></filterchain>
            </loadfile>

            <!-- break role and permission set dependencies with tooling api -->
            <!--<soapcall endpoint="${loginUrl}/services/Soap/T/@{apiVersion}"><![CDATA[
                <Envelope xmlns="http://schemas.xmlsoap.org/soap/envelope/">
                    <Header>
                        <SessionHeader xmlns="urn:tooling.soap.sforce.com">
                            <sessionId>${sessionId}</sessionId>
                        </SessionHeader>
                    </Header>
                    <Body>
                        <executeAnonymous xmlns="urn:tooling.soap.sforce.com">
                            <String>
                                delete [SELECT Id FROM PermissionSetAssignment WHERE PermissionSet.ProfileId = null];
                                User[] users = [SELECT Id FROM User WHERE UserRoleId != null];
                                for (User user : users) user.UserRoleId = null;
                                update users;
                            </String>
                        </executeAnonymous>
                    </Body>
                </Envelope>
            ]]></soapcall>-->

            <!-- reset working directory -->
            <delete dir="@{tempDir}" />
            <mkdir dir="@{tempDir}" />

            <!-- determines org shape -->
            <local name="describeMetadataResult.tmp" />
            <tempfile property="describeMetadataResult.tmp" prefix="describeMetadataResult" suffix=".tmp" createfile="true" deleteonexit="true" />
            <sf:describeMetadata serverurl="${loginUrl}" sessionid="${sessionId}" resultFilePath="${describeMetadataResult.tmp}" />

            <!-- clean metadata descriptions -->
            <local name="metadataTypes.tmp" />
            <tempfile property="metadataTypes.tmp" prefix="metadataTypes" suffix=".tmp" createfile="true" deleteonexit="true" />
            <concat destFile="${metadataTypes.tmp}">
                <fileset file="${describeMetadataResult.tmp}" />
                <filterchain>
                    <linecontainsregexp><regexp pattern="ChildObjects|XMLName" /></linecontainsregexp>
                    <tokenfilter><replacestring from="," to="${line.separator}"/></tokenfilter>
                    <tokenfilter><replacestring from="ChildObjects: " to=""/></tokenfilter>
                    <tokenfilter><replacestring from="XMLName: " to=""/></tokenfilter>
                    <tokenfilter><replacestring from="*" to=""/></tokenfilter>
                    <tokenfilter><ignoreblank/></tokenfilter>
                    <sortfilter/>
                </filterchain>
            </concat>

            <!-- lists by type with regex filter -->
            <macrodef name="listMetadataForDestroy">
                <attribute name="negate" />
                <attribute name="pattern" />
                <attribute name="metadataType" />
                <sequential>
                    <echo>Preparing destructiveChangesPost.xml - @{metadataType}</echo>
                    <local name="listMetadataResult.tmp" />
                    <tempfile property="listMetadataResult.tmp" prefix="@{metadataType}" suffix=".tmp" createfile="true" deleteonexit="true" />

                    <!--
                    Chat_Team Client_Delivery Marketing_Template Military_Wellness_Initiative RUSH_Tier_1_Choice RUSH_Tier_1_archive RUSH_Tier_2 Registration Rewards Sales_Team_Emails Site_Support Syncing unfiled$public
                    -->
                    <if>
                     <equals arg1="@{metadataType}" arg2="EmailTemplate" />
                     <then>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp1" folder="Chat_Team"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp2" folder="Client_Delivery"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp3" folder="Marketing_Template"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp4" folder="Military_Wellness_Initiative"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp5" folder="RUSH_Tier_1_Choice"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp6" folder="RUSH_Tier_1_archive"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp7" folder="RUSH_Tier_2"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp8" folder="Registration"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp9" folder="Rewards"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp10" folder="Sales_Team_Emails"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp11" folder="Site_Support"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp12" folder="Syncing"/>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="listMetadataResult.tmp13" folder="unfiled$public"/>

                       <concat destFile="${listMetadataResult.tmp}" append="true">
                            <fileset file="listMetadataResult.tmp1" />
                            <fileset file="listMetadataResult.tmp2" />
                            <fileset file="listMetadataResult.tmp3" />
                            <fileset file="listMetadataResult.tmp4" />
                            <fileset file="listMetadataResult.tmp5" />
                            <fileset file="listMetadataResult.tmp6" />
                            <fileset file="listMetadataResult.tmp7" />
                            <fileset file="listMetadataResult.tmp8" />
                            <fileset file="listMetadataResult.tmp9" />
                            <fileset file="listMetadataResult.tmp10" />
                            <fileset file="listMetadataResult.tmp11" />
                            <fileset file="listMetadataResult.tmp12" />
                            <fileset file="listMetadataResult.tmp13" />

                            <filterchain>
                                <scriptfilter language="javascript">
                                    var line = self.getToken();

                                    if (line.indexOf("RejectionEmail") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("CommunityWelcomeEmailTemplate") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("UpdateConnEmail") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("UpdateConnEmail") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("DeactivationEmail") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("CommunityForgotPasswordEmailTemplate") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("CommunityChangePasswordEmailTemplate") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("InvitationEmail") != -1) {
                                        self.setToken(null);
                                    }
                                    if (line.indexOf("AcceptanceEmail") != -1) {
                                        self.setToken(null);
                                    }
                                </scriptfilter>
                                <!--<linecontains negate="true">
                                    <contains value="RejectionEmail"/>
                                    <contains value="CommunityWelcomeEmailTemplate"/>
                                    <contains value="UpdateConnEmail"/>
                                    <contains value="DeactivationEmail"/>
                                    <contains value="CommunityForgotPasswordEmailTemplate"/>
                                    <contains value="CommunityChangePasswordEmailTemplate"/>
                                    <contains value="InvitationEmail"/>
                                    <contains value="AcceptanceEmail"/>
                                </linecontains>-->
                            </filterchain>
                       </concat>



                     </then>
                     <else>
                       <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="@{metadataType}" resultFilePath="${listMetadataResult.tmp}" />
                     </else>
                    </if>

                    <!--<if>
                        <equals arg1="@{metadataType}" arg2="WorkflowRule" />
                        <then>
                            <echo>destructiveChangesPost - @{metadataType}</echo>
                            <concat destFile="@{tempDir}/destructiveChangesPost.xml" append="true">
                                <fileset file="${listMetadataResult.tmp}" />
                                <header filtering="false"><![CDATA[${line.separator}<types>${line.separator}    <name>@{metadataType}</name>${line.separator}]]></header>
                                <filterchain>
                                    <linecontains><contains value="FullName/Id" /></linecontains>
                                </filterchain>
                                <footer filtering="false"><![CDATA[</types>]]></footer>
                            </concat>
                        </then>
                    </if>-->

                    <concat destFile="@{tempDir}/destructiveChangesPost.xml" append="true">
                        <fileset file="${listMetadataResult.tmp}" />
                        <header filtering="false"><![CDATA[${line.separator}<types>${line.separator}    <name>@{metadataType}</name>${line.separator}]]></header>
                        <filterchain>
                            <scriptfilter language="javascript">
                                var line = self.getToken();

                                if (line.indexOf("LiveChatTranscriptWaiting-Live") != -1) {
                                    self.setToken(null);
                                }
                                if (line.indexOf("LiveChatTranscriptActive-Live") != -1) {
                                    self.setToken(null);
                                }

                            </scriptfilter>
                            <linecontains><contains value="FullName/Id" /></linecontains>
                            <replaceregex pattern="FullName/Id: (.+)/.*" replace="&lt;members&gt;\1&lt;/members&gt;" />
                            <linecontainsregexp negate="@{negate}"><regexp pattern="@{pattern}" /></linecontainsregexp>
                        </filterchain>
                        <footer filtering="false"><![CDATA[</types>]]></footer>
                    </concat>
                </sequential>
            </macrodef>

            <!-- open destructive changes definition -->
            <echo file="@{tempDir}/destructiveChangesPost.xml"><![CDATA[<Package xmlns="http://soap.sforce.com/2006/04/metadata">]]></echo>

            <!-- iterates over (most) metadata types -->
            <loadfile property="" srcFile="${metadataTypes.tmp}">
                <filterchain>
                    <!-- AppMenu - AppSwitcher.appmenu - Error: The AppMenu called 'AppSwitcher' is standard and cannot be deleted -->
                    <!-- AssignmentRules - Case.assignmentRules - Error: The AssignmentRules called 'Case' is standard and cannot be deleted -->
                    <!-- AutoResponseRules - Lead.autoResponseRules - Error: The AutoResponseRules called 'Lead' is standard and cannot be deleted -->
                    <!-- Certificate - SelfSignedCert.crt - Error: We can't delete this certificate because your Identity Provider is using it -->
                    <!-- CleanDataService - DataCloudCompanyMatch - Error: You can't delete default data integration rule -->
                    <!-- Community - Zone.community - Error: invalid parameter value -->
                    <!-- CustomSite - BigAss.site - Error: insufficient access rights on cross-reference id -->
                    <!-- CustomObjectTranslation - MyMeta__mdt-en_US - Error: The CustomObjectTranslation called 'MyMeta__mdt-en_US' is standard and cannot be deleted -->
                    <!-- EscalationRules - Case.escalationRules: - Error: The EscalationRules called 'Case' is standard and cannot be deleted -->
                    <!-- Flow - TaskNotify.flowDefinition - Error: insufficient access rights on cross-reference id -->
                    <!-- InstalledPackage - Error: cannot modify managed object: state=installed -->
                    <!-- MatchingRules - Account.matchingRule: - Error: Matching Rules have to be deleted individually -->
                    <!-- RecordType - Metric.Completion - Error: Cannot delete record type through API -->
                    <!-- SharingRules - Account.sharingRules - Error: The SharingRules called 'Account' is standard and cannot be deleted -->
                    <!-- Workflow - Account.workflow - Error: Cannot delete a workflow object; Workflow Rules and Actions must be deleted individually -->
                    <linecontainsregexp negate="true">
                        <regexp pattern="AppMenu|AssignmentRules|AutoResponseRules|Certificate|CleanDataService|Community|CustomSite|CustomObjectTranslation|EscalationRules|InstalledPackage|MatchingRules|RecordType|SharingRules|ManagedTopic|LiveChatButton|Skill|Network|SiteDotCom|PermissionSet|LiveChatDeployment|FlowDefinition|Flow$|Workflow$|BusinessProcess|Role|FlexiPage" />
                    </linecontainsregexp>

                    <!-- Layout - Remove only: Account-Account %28Marketing%29 and WorkFeedback-Feedback Layout - Summer %2715 etc -->
                    <!-- Profile - Remove only: Custom: Marketing Profile and Custom: Support Profile and Custom: Sales Profile etc -->
                    <!-- ListView - Leaves behind: Activity.All, Asset.All, Campaign.All, Contract.All, Product2.All, User.All etc -->
                    <!-- CustomField - Leaves behind: BigObject Customer_Interaction__b.Score_This_Game__c etc -->
                    <!-- MatchingRule - Leaves behind: Lead.Standard_Lead_Match_Rule_v1_0 and Account.Standard_Account_Match_Rule_v1_0 etc -->
                    <!-- CustomObject - Remove only: Big Objects, Custom Objects, Platform Events, External Objects etc -->
                    <!-- BusinessProcess - Leaves behind: Case.master etc -->
                    <!-- CustomApplication - Leaves behind: standard__AppLauncher etc -->
                    <scriptfilter language="javascript">
                        var negate = false, pattern = '.*', metadataType = self.getToken();
                        if ('Layout' == metadataType) (negate = false) | (pattern = '%27|%28|%29');
                        if ('Profile' == metadataType) (negate = false) | (pattern = 'Custom%3A');
                        if ('ListView' == metadataType) (negate = true) | (pattern = '\\.All&lt;/members&gt;');
                        if ('CustomField' == metadataType) (negate = true) | (pattern = '__b\\.');
                        if ('MatchingRule' == metadataType) (negate = true) | (pattern = 'Standard_');
                        if ('CustomObject' == metadataType) (negate = false) | (pattern = '__b|__c|__e|__x|__mdt');
                        if ('BusinessProcess' == metadataType) (negate = true) | (pattern = 'master');
                        if ('CustomApplication' == metadataType) (negate = true) | (pattern = 'standard__');
                        var macro = project.createTask('listMetadataForDestroy');
                        macro.setDynamicAttribute('negate', negate);
                        macro.setDynamicAttribute('pattern', pattern);
                        macro.setDynamicAttribute('metadatatype', metadataType);
                        macro.execute(); //dynamic attributes are lowercase insistent
                    </scriptfilter>
                </filterchain>
            </loadfile>

            <!-- close destructive changes definition -->
            <echo append="true" file="@{tempDir}/destructiveChangesPost.xml"><![CDATA[</Package>]]></echo>

            <!-- retrieves by type and regex replaces -->
            <macrodef name="bulkRetrieveForDestroy">
                <attribute name="metadataType" />
                <attribute name="directoryName" />
                <attribute name="pattern" />
                <attribute name="expression" />
                <sequential>
                    <echo>Preparing package.xml - @{metadataType}</echo>
                    <mkdir dir="@{tempDir}/@{directoryName}" />
                    <sf:bulkRetrieve serverurl="${loginUrl}" sessionid="${sessionId}" retrieveTarget="@{tempDir}" metadataType="@{metadataType}" batchSize="10000" />
                    <replaceregexp flags="gs">
                        <fileset dir="@{tempDir}/@{directoryName}" />
                        <regexp pattern="@{pattern}" />
                        <substitution expression="@{expression}" />
                    </replaceregexp>
                </sequential>
            </macrodef>

            <!-- fix layout custom links - Error: This WebLink is referenced elsewhere in salesforce.com -->
            <bulkRetrieveForDestroy
                metadataType="Layout"
                directoryName="layouts"
                pattern="&lt;layoutItems&gt;\s+&lt;customLink&gt;[^&lt;]+&lt;/customLink&gt;\s+&lt;/layoutItems&gt;"
                expression="&lt;!--\0--&gt;"
            />

            <!-- fix layout custom buttons - Error: This WebLink is referenced elsewhere in salesforce.com - Order-Order Layout -->
            <replaceregexp flags="gs">
                <fileset dir="@{tempDir}/layouts" />
                <regexp pattern="&lt;customButtons&gt;[^&lt;]+&lt;/customButtons&gt;" />
                <substitution expression="&lt;!--\0--&gt;" />
            </replaceregexp>

            <!-- fix profile default apps - Error: Unable to delete custom app. Profiles are using this custom app as default -->
            <bulkRetrieveForDestroy
                metadataType="Profile"
                directoryName="profiles"
                pattern="&lt;userPermissions&gt;.*&lt;/userPermissions&gt;"
                expression="&lt;applicationVisibilities&gt;&lt;application&gt;standard__AppLauncher&lt;/application&gt;&lt;default&gt;true&lt;/default&gt;&lt;visible&gt;true&lt;/visible&gt;&lt;/applicationVisibilities&gt;"
            />

            <!-- fix role parents - Error: Your attempt to delete the role could not be completed because at least one role reports to that role -->


            <bulkRetrieveForDestroy
                metadataType="Role"
                directoryName="roles"
                pattern="&lt;parentRole&gt;(?!System_Administrator|ignoremeN)[^&lt;]+&lt;/parentRole&gt;"
                expression="&lt;!--\0--&gt;"
            />



            <!-- fix site dependencies - Error: This static resource is referenced elsewhere in salesforce.com. Remove the usage and try again -->
            <!--<bulkRetrieveForDestroy
                metadataType="CustomSite"
                directoryName="sites"
                pattern="&lt;CustomSite xmlns=&quot;http://soap.sforce.com/2006/04/metadata&quot;&gt;.*&lt;active&gt;([^&lt;]+)&lt;/active&gt;.*&lt;allowStandardPortalPages&gt;([^&lt;]+)&lt;/allowStandardPortalPages&gt;.*&lt;clickjackProtectionLevel&gt;([^&lt;]+)&lt;/clickjackProtectionLevel&gt;.*&lt;indexPage&gt;([^&lt;]+)&lt;/indexPage&gt;.*&lt;masterLabel&gt;([^&lt;]+)&lt;/masterLabel&gt;.*&lt;requireHttps&gt;([^&lt;]+)&lt;/requireHttps&gt;.*&lt;siteType&gt;([^&lt;]+)&lt;/siteType&gt;.*&lt;subdomain&gt;([^&lt;]+)&lt;/subdomain&gt;.*&lt;/CustomSite&gt;"
                expression="&lt;CustomSite xmlns=&quot;http://soap.sforce.com/2006/04/metadata&quot;&gt;${line.separator}&lt;active&gt;\1&lt;/active&gt;${line.separator}&lt;allowStandardPortalPages&gt;\2&lt;/allowStandardPortalPages&gt;${line.separator}&lt;clickjackProtectionLevel&gt;\3&lt;/clickjackProtectionLevel&gt;${line.separator}&lt;indexPage&gt;SiteHome&lt;/indexPage&gt;${line.separator}&lt;masterLabel&gt;\5&lt;/masterLabel&gt;${line.separator}&lt;requireHttps&gt;\6&lt;/requireHttps&gt;${line.separator}&lt;siteType&gt;\7&lt;/siteType&gt;${line.separator}&lt;subdomain&gt;\8&lt;/subdomain&gt;${line.separator}&lt;urlPathPrefix&gt;\5&lt;/urlPathPrefix&gt;${line.separator}&lt;/CustomSite&gt;"
            />-->

            <bulkRetrieveForDestroy
                metadataType="CustomSite"
                directoryName="sites"
                pattern="&lt;CustomSite xmlns=&quot;http://soap.sforce.com/2006/04/metadata&quot;&gt;.*&lt;active&gt;([^&lt;]+)&lt;/active&gt;.*&lt;allowStandardPortalPages&gt;([^&lt;]+)&lt;/allowStandardPortalPages&gt;.*&lt;clickjackProtectionLevel&gt;([^&lt;]+)&lt;/clickjackProtectionLevel&gt;.*&lt;indexPage&gt;([^&lt;]+)&lt;/indexPage&gt;.*&lt;masterLabel&gt;([^&lt;]+)&lt;/masterLabel&gt;.*&lt;requireHttps&gt;([^&lt;]+)&lt;/requireHttps&gt;.*&lt;siteType&gt;([^&lt;]+)&lt;/siteType&gt;.*&lt;subdomain&gt;([^&lt;]+)&lt;/subdomain&gt;.*.*&lt;urlPathPrefix&gt;([^&lt;]+)&lt;/urlPathPrefix&gt;.*&lt;/CustomSite&gt;"
                expression="&lt;CustomSite xmlns=&quot;http://soap.sforce.com/2006/04/metadata&quot;&gt;${line.separator}&lt;active&gt;\1&lt;/active&gt;${line.separator}&lt;allowStandardPortalPages&gt;\2&lt;/allowStandardPortalPages&gt;${line.separator}&lt;clickjackProtectionLevel&gt;\3&lt;/clickjackProtectionLevel&gt;${line.separator}&lt;indexPage&gt;SiteHome&lt;/indexPage&gt;${line.separator}&lt;masterLabel&gt;\5&lt;/masterLabel&gt;${line.separator}&lt;requireHttps&gt;\6&lt;/requireHttps&gt;${line.separator}&lt;siteType&gt;\7&lt;/siteType&gt;${line.separator}&lt;subdomain&gt;\8&lt;/subdomain&gt;${line.separator}&lt;urlPathPrefix&gt;\9&lt;/urlPathPrefix&gt;${line.separator}&lt;/CustomSite&gt;"
            />

            <!-- fix object listviews - Error: cannot delete last filter -->
            <bulkRetrieveForDestroy
                metadataType="ListView"
                directoryName="objects"
                pattern="&lt;listViews&gt;.*&lt;/listViews&gt;"
                expression="&lt;listViews&gt;&lt;fullName&gt;All&lt;/fullName&gt;&lt;filterScope&gt;Everything&lt;/filterScope&gt;&lt;label&gt;All&lt;/label&gt;&lt;/listViews&gt;&lt;searchLayouts/&gt;"
            />

            <!-- fix site index pages - Error: Required field is missing: indexPage -->
            <local name="NumberOfSites.tmp" />
            <condition property="NumberOfSites.tmp" else=""><resourcecount when="ne" count="0"><fileset dir="@{tempDir}/sites" /></resourcecount></condition>
            <resourcecount property="NumberOfSites.tmp"><fileset dir="@{tempDir}/sites" /></resourcecount>
            <script language="javascript">with (new JavaImporter(java.io)) {
                if ('${NumberOfSites.tmp}') {
                    var page = project.createTask('echo');
                    page.setFile(new File('@{tempDir}/pages/SiteHome.page'));
                    page.setMessage('&lt;apex:page/&gt;');
                    page.perform();
                    var meta = project.createTask('echo');
                    meta.setFile(new File('@{tempDir}/pages/SiteHome.page-meta.xml'));
                    meta.setMessage('&lt;ApexPage&gt;&lt;label&gt;SiteHome&lt;/label&gt;&lt;/ApexPage&gt;');
                    meta.perform();
                }
            }</script>

            <!-- fix support setting queue dependencies - Error: cannot delete queue that is in use -->
            <mkdir dir="@{tempDir}/settings" />
            <echoxml file="@{tempDir}/settings/Case.settings" namespacePolicy="all">
                <CaseSettings xmlns="http://soap.sforce.com/2006/04/metadata">
                    <defaultCaseOwner>@{username}</defaultCaseOwner>
                    <defaultCaseOwnerType>User</defaultCaseOwnerType>
                </CaseSettings>
            </echoxml>

            <!-- fix big objects - Error: Custom BigObjects do not support layouts -->
            <delete><fileset dir="@{tempDir}" includes="**/*__b*" /></delete>

            <!-- MANUAL COMPONENTS -->
            <!-- CustomSite URL Rewriter is not available through Metadata API -->
            <!-- Inbound Email Services are not available through Metadata API -->
            <!-- Lead Settings behaviour is not available through Metadata API -->

            <!-- strips namespaced components -->
            <macrodef name="unspecifyForDestroy">
                <attribute name="namespacePrefix" />
                <sequential>
                    <echo>Stripping namespaced components: @{namespacePrefix}</echo>
                    <replaceregexp
                        flags="gm"
                        file="@{tempDir}/destructiveChangesPost.xml"
                        match="&lt;members&gt;[^&lt;]*@{namespacePrefix}__[^&lt;]+&lt;/members&gt;"
                        replace="&lt;!--\0--&gt;"
                    />
                    <delete><fileset dir="@{tempDir}" includes="**/@{namespacePrefix}__*" /></delete>
                </sequential>
            </macrodef>

            <!-- iterates over all namespace prefixes -->
            <echo>Listing installed packages...</echo>
            <local name="InstalledPackage.tmp" />
            <tempfile property="InstalledPackage.tmp" prefix="InstalledPackage" suffix=".tmp" createfile="true" deleteonexit="true" />
            <sf:listMetadata serverurl="${loginUrl}" sessionid="${sessionId}" metadataType="InstalledPackage" resultFilePath="${InstalledPackage.tmp}" />
            <loadfile property="" srcFile="${InstalledPackage.tmp}">
                <filterchain>
                    <linecontains><contains value="FullName/Id" /></linecontains>
                    <replaceregex pattern="FullName/Id: (.+)/.*" replace="\1" />
                    <sortfilter />
                    <uniqfilter />
                    <scriptfilter language="javascript">
                        var macro = project.createTask('unspecifyForDestroy');
                        macro.setDynamicAttribute('namespaceprefix', self.getToken());
                        macro.execute(); //dynamic attributes are lowercase insistent
                    </scriptfilter>
                </filterchain>
            </loadfile>

            <!-- create package definition for fixes -->
            <echoxml file="@{tempDir}/package.xml" namespacePolicy="all">
                <Package xmlns="http://soap.sforce.com/2006/04/metadata">
                    <version>40.0</version>
                    <types>
                        <name>ApexPage</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>CustomSite</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>Layout</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>ListView</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>Profile</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>Role</name>
                        <members>*</members>
                    </types>
                    <types>
                        <name>Settings</name>
                        <members>*</members>
                    </types>
                </Package>
            </echoxml>

            <!-- destroy!-->
            <sf:deploy
                serverurl="${loginUrl}"
                sessionid="${sessionId}"
                deployRoot="@{tempDir}"
                ignoreWarnings="true"
                singlePackage="true"
                purgeOnDelete="true"
            />

        </sequential>

    </macrodef>

</project>
