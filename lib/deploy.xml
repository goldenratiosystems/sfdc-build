<?xml version="1.0"?>

<project name="deploy" xmlns:sf="antlib:com.salesforce">

	<target name="deploy" depends="build,clearPackage"/>

    <target name="buildzip">
        <echo>Salesforce Username: ${sf.username}</echo>
        <sf:deploy
            username="${sf.username}"
            password="${sf.password}"
            serverurl="${sf.server}"
            zipFile="deploy.zip"
            maxPoll="200"
            pollWaitMillis="50000"
            rollbackOnError="true"
            singlePackage="true"
            allowMissingFiles="false"
            logType="Detail"
            checkOnly="${checkOnly}"
        />
    </target>

	<target name="build" depends="makePackage">
		<echo>Salesforce Username: ${sf.username}</echo>
	    <sf:deploy
			username="${sf.username}"
			password="${sf.password}"
			serverurl="${sf.server}"
			zipFile="deploy.zip"
			maxPoll="200"
			pollWaitMillis="50000"
			rollbackOnError="true"
			singlePackage="true"
			allowMissingFiles="false"
            logType="Detail"
            checkOnly="${checkOnly}"
		/>
	</target>

	<target name="clearPackage">
		<delete file="deploy.zip" failonerror="false"/>
	</target>

    <macrodef name="xmltaskRemove">
        <attribute name="dir"/>
        <attribute name="files"/>
        <attribute name="xpath"/>
        <sequential>
            <xmltask toDir="@{dir}">
                <fileset dir="@{dir}" includes="@{files}" />
                <remove path="@{xpath}"/>
            </xmltask>
        </sequential>
    </macrodef>

    <macrodef name="xmltaskReplaceWithText">
        <attribute name="dir"/>
        <attribute name="files"/>
        <attribute name="xpath"/>
        <attribute name="text"/>
        <sequential>
            <xmltask toDir="@{dir}">
                <fileset dir="@{dir}" includes="@{files}" />
                <replace path="@{xpath}" withText="@{text}"/>
            </xmltask>
        </sequential>
    </macrodef>

    <macrodef name="xmltaskReplaceWithText">
        <attribute name="dir"/>
        <attribute name="files"/>
        <attribute name="xpath"/>
        <attribute name="text"/>
        <sequential>
            <xmltask toDir="@{dir}">
                <fileset dir="@{dir}" includes="@{files}" />
                <replace path="@{xpath}" withText="@{text}"/>
            </xmltask>
        </sequential>
    </macrodef>

    <macrodef name="postCleanupDeploy">
        <attribute name="dir" default="${github.project.name}/src"/>
        <attribute name="tmpDir" default="temp"/>
        <attribute name="zipFile"  default="deploy.zip"/>
        <sequential>

            <delete file="@{zipFile}" failonerror="false"/>

            <xmltask toDir="@{dir}/workflows">
                <fileset dir="@{dir}/workflows" includes="*.workflow" />
                <remove path="//:Workflow/:alerts/:recipients[:type='user' or :type='partnerUser']/:recipient"/>
                <replace path="//:Workflow/:alerts/:recipients[:type='user' or :type='partnerUser']/:type/text()" withText="owner"/>
                <remove path="//:Workflow/:alerts/:recipients[:type='owner'][position()&gt;1]"/>
            </xmltask>

            <xmltask toDir="@{dir}/objects">
                <fileset dir="@{dir}/objects" includes="*.object" />
                <remove path="//:CustomObject/:webLinks[:fullName/text()[contains(., '__')]]"/>
                <remove path="//:CustomObject/:searchLayouts[:lookupPhoneDialogsAdditionalFields/text()[contains(., '00N')]]"/>
            </xmltask>

            <for param="file">
                <path>
                    <fileset dir="@{dir}/documents/Client_Logos" includes="**/*.*" excludes="**/*.xml"/>
                </path>
                <sequential>
                    <local name="filename" />
                    <basename property="filename" file="@{file}"/>
                    <echo file="@{file}"><![CDATA[]]></echo>
                </sequential>
            </for>

            <!--<xmltask toDir="@{dir}/objects">
                <fileset dir="@{dir}/objects" includes="*.object" />
                <remove path="//:CustomObject/:listViews[:fullName/text()='Sales_Queue_Opportunity_Schedule']"/>
                <remove path="//:CustomObject/:validationRules[:fullName/text()='Kickoff_before_deadline']"/>
                <remove path="//:CustomObject/:searchLayouts[:lookupPhoneDialogsAdditionalFields/text()[contains(., '00N')]]"/>
                <replace path="//:CustomObject/:fields[:fullName/text()='Approver__c']/:trackHistory/text()" withText="false"/>
            </xmltask>-->

            <!--<xmltask source="@{dir}/package.xml" dest="@{dir}/package.xml">
                <remove path="//:Package/:types[:name/text()='AccountCriteriaBasedSharingRule']"/>
                <remove path="//:Package/:types[:name/text()='AccountOwnerSharingRule']"/>
                <remove path="//:Package/:types[:name/text()='EmailTemplate']/:members[text()='unfiled$public']"/>
            </xmltask>
            <delete file="@{dir}/accountSharingRules/Account.sharingRules" failonerror="false"/>
            <delete file="@{dir}/profiles/Premier Support User.profile" failonerror="false"/>-->

            <for list="${deletePackageMember}" param="member">
                <sequential>
                    <delete file="@{dir}/@{member}" failonerror="false"/>
                </sequential>
            </for>

            <for list="${deployPackageMemberExcludes}" param="member">
                <sequential>
                    <xmltask source="@{dir}/package.xml" dest="@{dir}/package.xml">
                        <remove path="//:Package/:types[:name/text()='@{member}']"/>
                    </xmltask>
                </sequential>
            </for>

            <for list="${deployRemoveMetadata}" param="xmltask.member">
                <sequential>
                    <script language="javascript"><![CDATA[with (new JavaImporter(java.net, java.io)) {
                        var member = new java.lang.String('@{xmltask.member}');
                        var members = member.match(/([^--]+)/g) || [];
                        project.setProperty('xmltask.folder', members[0]);
                        project.setProperty('xmltask.files', members[1]);
                        project.setProperty('xmltask.xpath', members[2]);
                     }]]>
                    </script>
                    <xmltaskRemove dir="@{dir}/${xmltask.folder}" files="${xmltask.files}" xpath="${xmltask.xpath}"/>
                </sequential>
            </for>

            <for list="${deployReplaceMetadata}" param="xmltask.member">
                <sequential>
                    <script language="javascript"><![CDATA[with (new JavaImporter(java.net, java.io)) {
                        var member = new java.lang.String('@{xmltask.member}');
                        var members = member.match(/([^--]+)/g) || [];
                        project.setProperty('xmltask.folder', members[0]);
                        project.setProperty('xmltask.files', members[1]);
                        project.setProperty('xmltask.xpath', members[2]);
                        project.setProperty('xmltask.text', members[3]);
                     }]]>
                    </script>
                    <xmltaskRemove dir="@{dir}/${xmltask.folder}" files="${xmltask.files}" xpath="${xmltask.xpath}" text="${xmltask.text}"/>
                </sequential>
            </for>

            <zip destfile="@{zipFile}" update="true">
                <fileset dir="@{dir}" includes="**/*.*" excludes="${deployExcludes}"/>
            </zip>

            <sf:deploy
                username="${sf.username}"
                password="${sf.password}"
                serverurl="${sf.server}"
                zipFile="@{zipFile}"
                ignoreWarnings="true"
                singlePackage="true"
                checkOnly="false"
            />

        </sequential>
    </macrodef>

    <macrodef name="deployDocuments">
        <attribute name="dir" default="${github.project.name}/src"/>
        <attribute name="zipFile"  default="deploy.zip"/>
        <attribute name="tmpDir" default="temp"/>
        <attribute name="apiVersion" default="40"/>
        <sequential>

            <delete file="@{zipFile}" failonerror="false"/>

            <echoxml file="@{tempDir}/package.xml" namespacePolicy="all">
                <Package xmlns="http://soap.sforce.com/2006/04/metadata">
                    <types>
                        <members>*</members>
                        <name>Document</name>
                    </types>
                    <version>@{apiVersion}</version>
                </Package>
            </echoxml>

            <zip destfile="@{zipFile}" update="true">
                <fileset dir="@{tempDir}" includes="package.xml"/>
                <fileset dir="${github.project.name}/src" includes="documents/**/*.*"/>
            </zip>

            <sf:deploy
                username="${sf.username}"
                password="${sf.password}"
                serverurl="${sf.server}"
                zipFile="@{zipFile}"
                ignoreWarnings="true"
                singlePackage="true"
                checkOnly="false"
            />

        </sequential>
    </macrodef>

    <target name="postCleanupDeploy">
        <postCleanupDeploy/>
        <antcall target="git-fetch-branch"/>
        <deployDocuments/>
    </target>

	<target name="makePackage" description="Deploys code local src dir to salesforce org specified in build.properties!" depends="clearPackage">
	  <zip destfile="deploy.zip" update="true">
		<fileset dir="${github.project.name}/src" includes="package.xml"/>
		<fileset dir="${github.project.name}/src" includes="assignmentRules/*.assignmentRules"/>
		<fileset dir="${github.project.name}/src" includes="classes/*.cls,classes/*-meta.xml"/>
		<fileset dir="${github.project.name}/src" includes="components/*.component,components/*-meta.xml"/>
		<fileset dir="${github.project.name}/src" includes="labels/CustomLabels.labels"/>
        <fileset dir="${github.project.name}/src" includes="documents/**/*.*"/>
        <fileset dir="${github.project.name}/src" includes="email/**/*.*"/>
		<!--<fileset dir="${github.project.name}/src" includes="layouts/*.layout"/>-->
        <fileset dir="${github.project.name}/src" includes="settings/*.settings" excludes="settings/PersonalJourney.settings,
settings/OrgPreference.settings,settings/Case.settings,settings/Search.settings,settings/Opportunity.settings,settings/Ideas.settings"/>
        <!--<fileset dir="${github.project.name}/src" includes="analyticSnapshots/*.snapshot"/>-->
        <fileset dir="${github.project.name}/src" includes="aura/**/*.*"/>
        <fileset dir="${github.project.name}/src" includes="autoResponseRules/*.autoResponseRules"/>
        <!--<fileset dir="${github.project.name}/src" includes="cleanDataServices/*.cleanDataService"/>-->
        <fileset dir="${github.project.name}/src" includes="customMetadata/*.md"/>
        <fileset dir="${github.project.name}/src" includes="customPermissions/*.customPermission"/>
        <fileset dir="${github.project.name}/src" includes="delegateGroups/*.delegateGroup"/>
        <fileset dir="${github.project.name}/src" includes="duplicateRules/*.duplicateRule"/>
        <fileset dir="${github.project.name}/src" includes="escalationRules/*.escalationRule"/>
        <!--<fileset dir="${github.project.name}/src" includes="flowDefinitions/*.flowDefinition"/>
        <fileset dir="${github.project.name}/src" includes="flows/*.flow"/>-->
        <fileset dir="${github.project.name}/src" includes="globalValueSets/*.globalValueSet"/>
        <fileset dir="${github.project.name}/src" includes="groups/*.group"/>
        <fileset dir="${github.project.name}/src" includes="homePageComponents/*.homePageComponent"/>
        <fileset dir="${github.project.name}/src" includes="homePageLayouts/*.homePageLayout"/>
        <fileset dir="${github.project.name}/src" includes="managedTopics/*.managedTopics"/>
        <fileset dir="${github.project.name}/src" includes="matchingRules/*.matchingRule"/>
        <fileset dir="${github.project.name}/src" includes="objectTranslations/*.objectTranslation"/>
        <fileset dir="${github.project.name}/src" includes="permissionsets/*.permissionset" excludes="permissionsets/Create_Processes_INCLUDES_SEE_ALL_DATA.permissionset,permissionsets/Process_Builder.permissionset"/>
        <!--<fileset dir="${github.project.name}/src" includes="profiles/*.profile" excludes="profiles/Admin.profile,profiles/Premier Support User.profile"/>-->
        <fileset dir="${github.project.name}/src" includes="queues/*.queue"/>
        <fileset dir="${github.project.name}/src" includes="quickActions/*.quickAction" excludes="quickActions/SendEmail.quickAction"/>
        <fileset dir="${github.project.name}/src" includes="remoteSiteSettings/*.remoteSite"/>
        <fileset dir="${github.project.name}/src" includes="reportTypes/*.reportType"/>
        <fileset dir="${github.project.name}/src" includes="roles/*.role"/>
        <fileset dir="${github.project.name}/src" includes="sharingRules/*.sharingRules"/>
        <!--<fileset dir="${github.project.name}/src" includes="siteDotComSites/*.site"/>-->
        <fileset dir="${github.project.name}/src" includes="site/*.site"/>
        <fileset dir="${github.project.name}/src" includes="weblinks/*.weblink"/>
        <!--<fileset dir="${github.project.name}/src" includes="workflows/*.workflow"/>-->
        <!--<fileset dir="${github.project.name}/src" includes="applications/*.app" excludes="applications/CSR_Console.app"/>-->
		<fileset dir="${github.project.name}/src" includes="objects/*.object"/>
		<fileset dir="${github.project.name}/src" includes="pages/*.page,pages/*-meta.xml"/>
		<fileset dir="${github.project.name}/src" includes="staticresources/*.resource,staticresources/*-meta.xml"/>
		<!--<fileset dir="${github.project.name}/src" includes="tabs/*.tab"/>-->
		<fileset dir="${github.project.name}/src" includes="triggers/*.trigger,triggers/*-meta.xml"/>
	  </zip>
	</target>

    <target name="retrieve-clear">
        <delete dir="${retrieve.dir}" failonerror="false"/>
    </target>

    <target name="retrieve-create">
        <mkdir dir="${retrieve.dir}"/>
        <mkdir dir="${retrieve.dir}/src"/>
    </target>

    <target name="retrieve-metadata" depends="retrieve-clear, retrieve-create, copy-package">
        <sf:retrieve
            username="${sf.username}"
            password="${sf.password}"
            serverurl="${sf.server}"
            retrieveTarget="${retrieve.dir}/src"
            unpackaged="${retrieve.dir}/src/package.xml"
            maxPoll="2000"
            pollWaitMillis="5000"/>

        <antcall target="copy-meta"/>
    </target>

    <target name="copy-package">
        <copy file="${github.project.name}/src/package.xml" todir="${retrieve.dir}/src">
        </copy>
    </target>
    <target name="copy-meta">
        <copy todir="${github.project.name}/src">
            <fileset dir="${retrieve.dir}/src" includes="assignmentRules/*.assignmentRules"/>
            <fileset dir="${retrieve.dir}/src" includes="classes/*.cls,classes/*-meta.xml"/>
            <fileset dir="${retrieve.dir}/src" includes="components/*.component,components/*-meta.xml"/>
            <fileset dir="${retrieve.dir}/src" includes="labels/CustomLabels.labels"/>
            <fileset dir="${retrieve.dir}/src" includes="settings/*.settings" excludes="settings/PersonalJourney.settings,
    settings/OrgPreference.settings,settings/Case.settings,settings/Search.settings,settings/Opportunity.settings,settings/Ideas.settings"/>
            <fileset dir="${retrieve.dir}/src" includes="analyticSnapshots/*.snapshot"/>
            <fileset dir="${retrieve.dir}/src" includes="aura/**/*.*"/>
            <fileset dir="${retrieve.dir}/src" includes="autoResponseRules/*.autoResponseRules"/>
            <fileset dir="${retrieve.dir}/src" includes="customMetadata/*.md"/>
            <fileset dir="${retrieve.dir}/src" includes="customPermissions/*.customPermission"/>
            <fileset dir="${retrieve.dir}/src" includes="delegateGroups/*.delegateGroup"/>
            <fileset dir="${retrieve.dir}/src" includes="duplicateRules/*.duplicateRule"/>
            <fileset dir="${retrieve.dir}/src" includes="escalationRules/*.escalationRule"/>
            <fileset dir="${retrieve.dir}/src" includes="globalValueSets/*.globalValueSet"/>
            <fileset dir="${retrieve.dir}/src" includes="groups/*.group"/>
            <fileset dir="${retrieve.dir}/src" includes="homePageComponents/*.homePageComponent"/>
            <fileset dir="${retrieve.dir}/src" includes="homePageLayouts/*.homePageLayout"/>
            <fileset dir="${retrieve.dir}/src" includes="managedTopics/*.managedTopics"/>
            <fileset dir="${retrieve.dir}/src" includes="matchingRules/*.matchingRule"/>
            <fileset dir="${retrieve.dir}/src" includes="objectTranslations/*.objectTranslation"/>
            <fileset dir="${retrieve.dir}/src" includes="permissionsets/*.permissionset" excludes="permissionsets/Create_Processes_INCLUDES_SEE_ALL_DATA.permissionset,permissionsets/Process_Builder.permissionset"/>
            <!--<fileset dir="${retrieve.dir}/src" includes="queues/*.queue"/>-->
            <fileset dir="${retrieve.dir}/src" includes="quickActions/*.quickAction" excludes="quickActions/SendEmail.quickAction"/>
            <fileset dir="${retrieve.dir}/src" includes="remoteSiteSettings/*.remoteSite"/>
            <fileset dir="${retrieve.dir}/src" includes="reportTypes/*.reportType"/>
            <fileset dir="${retrieve.dir}/src" includes="roles/*.role"/>
            <fileset dir="${retrieve.dir}/src" includes="sharingRules/*.sharingRules"/>
            <fileset dir="${retrieve.dir}/src" includes="site/*.site"/>
            <fileset dir="${retrieve.dir}/src" includes="weblinks/*.weblink"/>
            <fileset dir="${retrieve.dir}/src" includes="objects/*.object"/>
            <fileset dir="${retrieve.dir}/src" includes="pages/*.page,pages/*-meta.xml"/>
            <fileset dir="${retrieve.dir}/src" includes="staticresources/*.resource,staticresources/*-meta.xml"/>
            <fileset dir="${retrieve.dir}/src" includes="triggers/*.trigger,triggers/*-meta.xml"/>
        </copy>
    </target>

</project>
